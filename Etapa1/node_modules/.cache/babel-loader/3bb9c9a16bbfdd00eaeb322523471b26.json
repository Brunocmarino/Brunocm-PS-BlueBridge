{"ast":null,"code":"var _jsxFileName = \"/home/brunocmarino/bruno_ubuntu/projetoBlueBridge/proj_1_bcm/Etapa1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css'; // Importing Components\n\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]); // Effects\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]); // Functions\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n\n    ;\n  }; // Save to Local\n\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }; // Check if there is some todo in localstorage\n\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = localStorage.getItem('todos', JSON.stringify(todos));\n      setTodos(todoLocal);\n    }\n  }; // Return\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ed's Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      todos: todos,\n      setTodos: setTodos,\n      inputText: inputText,\n      setInputText: setInputText,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      setTodos: setTodos,\n      filteredTodos: filteredTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"z0P7U0reIKx28RfPu1N+ngH8pn0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/brunocmarino/bruno_ubuntu/projetoBlueBridge/proj_1_bcm/Etapa1/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","getLocalTodos","filterHandler","saveLocalTodos","filter","todo","completed","localStorage","setItem","JSON","stringify","getItem","todoLocal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAK,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAK,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAjD,CALa,CAOb;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,aAAa;AACd,GAFQ,EAEP,EAFO,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,aAAa;AACbC,IAAAA,cAAc;AACf,GAHQ,EAGN,CAACR,KAAD,EAAQE,MAAR,CAHM,CAAT,CAZa,CAkBb;;AACA,QAAMK,aAAa,GAAG,MAAK;AACzB,YAAOL,MAAP;AACE,WAAK,WAAL;AACEG,QAAAA,gBAAgB,CAACL,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAEA,IAAI,CAACC,SAAL,KAAiB,IAApC,CAAD,CAAhB;AACA;;AACF,WAAK,aAAL;AACEN,QAAAA,gBAAgB,CAACL,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAEA,IAAI,CAACC,SAAL,KAAiB,KAApC,CAAD,CAAhB;AACA;;AACF;AACEN,QAAAA,gBAAgB,CAACL,KAAD,CAAhB;AACA;AATJ;;AAUC;AACF,GAZD,CAnBa,CAiCb;;;AACA,QAAMQ,cAAc,GAAG,MAAM;AAC3BI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAef,KAAf,CAA9B;AACD,GAFD,CAlCa,CAqCb;;;AACA,QAAMM,aAAa,GAAG,MAAM;AAC1B,QAAGM,YAAY,CAACI,OAAb,CAAqB,OAArB,MAAgC,IAAnC,EAAwC;AACtCJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B;AACD,KAFD,MAGI;AACF,UAAIE,SAAS,GAAGL,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACC,SAAL,CAAef,KAAf,CAA9B,CAAhB;AACAC,MAAAA,QAAQ,CAACgB,SAAD,CAAR;AACD;AACF,GARD,CAtCa,CAiDb;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEjB,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,SAAS,EAAEH,SAHb;AAIE,MAAA,YAAY,EAAEC,YAJhB;AAKE,MAAA,SAAS,EAAEI;AALb;AAAA;AAAA;AAAA;AAAA,YAJF,eAYE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,aAAa,EAAEG;AAHjB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAtEQP,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\n// Importing Components\r\nimport Form from \"./components/Form\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nfunction App() {\r\n  // States\r\n  const[inputText, setInputText] = useState(\"\");\r\n  const[todos,setTodos] = useState([]);\r\n  const[status, setStatus] = useState(\"all\");\r\n  const[filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  // Effects\r\n  useEffect(()=>{\r\n    getLocalTodos();\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status])\r\n  \r\n\r\n  // Functions\r\n  const filterHandler = () =>{\r\n    switch(status){\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo=>todo.completed===true));\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredTodos(todos.filter(todo=>todo.completed===false));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    };\r\n  };\r\n\r\n  // Save to Local\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n  // Check if there is some todo in localstorage\r\n  const getLocalTodos = () => {\r\n    if(localStorage.getItem('todos')===null){\r\n      localStorage.setItem('todos', JSON.stringify([]));\r\n    }\r\n    else{\r\n      let todoLocal = localStorage.getItem('todos', JSON.stringify(todos));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n\r\n  // Return\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Ed's Todo List</h1>\r\n      </header>\r\n      <Form \r\n        todos={todos} \r\n        setTodos={setTodos} \r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        setStatus={setStatus}\r\n        \r\n      />\r\n      <TodoList \r\n        todos={todos} \r\n        setTodos={setTodos} \r\n        filteredTodos={filteredTodos}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}